AppComponent.html
https://medium.com/@amcdnl/theming-angular-with-css-variables-3c78a5b20b24
https://stackblitz.com/edit/angular-themeing
<!--The content below is only a placeholder and can be replaced.-->
<div theme style="text-align:center">
    <section>
      <h3>Select your Theme: </h3>
    <select [(ngModel)]="chosenTheme" (ngModelChange)="trigger()" id="selectid">
      <option value="">choose</option>
      <option *ngFor="let item of themes" value="{{item}}">{{item}}</option>
    </select>
  </section>
<app-user-profile [profileDetails]="userProfileData"></app-user-profile>
<app-notification [notificationDetails]="notificationData"></app-notification>
</div>



App Component.ts

import { Component, ViewEncapsulation } from '@angular/core';
import { ThemeService } from './theme';
import { THEMES, ACTIVE_THEME, ThemeOptions } from './theme/symbols';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.scss'],
  //encapsulation: ViewEncapsulation.None
})
export class AppComponent {

 // let selected = [lightTheme, darkTheme, rainbowTheme];

constructor(private themeService: ThemeService) {}

themes = ['lightTheme', 'darkTheme', 'rainbowTheme'];
chosenTheme: string = "";
trigger(){
  switch(this.chosenTheme) {
     case "lightTheme": { 
        this.themeService.setTheme('light');
        break;
     }
     case "darkTheme": { 
        this.themeService.setTheme('dark');
        break;
     }
     case "rainbowTheme": { 
        this.themeService.setTheme('rainbow');
        break;
     }
  }
}


  toggle() {
    const active = this.themeService.getActiveTheme();
    if (active.name === 'light') {
      this.themeService.setTheme('dark');
    } else {
      this.themeService.setTheme('light');
    }
  }

